/// <reference types="node" />
import { EncryptedUserDataResponseValue } from './types';
export declare type BatchFieldInstances = {
    next_cursor_id: string;
    users: Array<UserFieldInstances>;
};
export declare type UserFieldInstances = {
    user_id: string;
    data: (FieldInstance | null)[];
};
export declare class FieldInstance {
    private attributes;
    private plaintext;
    readonly contentType: string;
    constructor(attributes: EncryptedUserDataResponseValue, plaintext: Uint8Array, contentType: string);
    /**
     * Returns the plaintext contents of this field instance as a string.
     */
    text(): string;
    /**
     * Returns the plaintext contents of this field instance as a Buffer.
     */
    buffer(): Buffer;
    /**
     * The id of the user this field instance belongs to.
     */
    get user_id(): string;
    /**
     * The id of the field this field instance belongs to.
     */
    get field_id(): string;
    /**
     * The type of object the value is. This is either 'string' or 'file'.
     *
     * If this is 'string', the value will be the encrypted contents.
     *
     * If this is 'file', the value will be the plaintext file id.
     */
    get object_type(): "string" | "file";
    /**
     * The value of this field instance. The value depends on the object type.
     *
     * If object_type is 'string', this will be the encrypted contents.
     *
     * If object_type is 'file', this will be the plaintext file id.
     */
    get value(): string;
    /**
     * The sha256 hash of the plaintext value concatenated with a nonce.
     */
    get integrity_hash(): string;
    /**
     * The time this field instance was created.
     */
    get created_at(): number;
}
